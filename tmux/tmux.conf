# remap prefix to Control + g
unbind C-b
unbind C-g
set -g prefix C-g
bind-key g send-prefix
bind-key C-g last-window

###########################################################################
# General options

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Ring the bell if any background window rang a bell
set -g bell-action any

# Watch for activity in background windows
setw -g monitor-activity on

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
set -g xterm-keys on

# auto window rename
set-window-option -g automatic-rename

# status bar
set-option -g status-utf8 on

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

###########################################################################
# General keymap

# Keep your finger on ctrl, or don't, same result
bind-key ^D detach-client
bind-key ^C new-window

# Redraw the client (if interrupted by wall, etc)
bind R refresh-client

# reload tmux config
unbind r
bind r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

###########################################################################
# Window management / navigation

# move between windows
bind-key ^H previous-window
bind-key ^L next-window

# ^\ (no prefix) to skip to last window we were in before this one
bind -n "^\\" last-window

###########################################################################
# Pane management / navigation

# Horizontal splits with s or ^S
unbind s
unbind ^S
bind-key s split-window
bind-key ^S split-window

# Vertical split with v or ^V
unbind v
unbind ^V
bind-key v split-window -h
bind-key ^V split-window -h

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Note on a few prefix options: ^A = 0x01, ^B = 0x02, ^G = 0x06
bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

###########################################################################
# Scrollback / pastebuffer

setw -g mode-keys vi

# Vim-style copy/paste
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

## CLIPBOARD selection integration, requires xsel (apt-get install xsel)
# Copy tmux paste buffer to CLIPBOARD
bind y run "tmux show-buffer | xsel -i -b"

###########################################################################
# Mouse mode

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'
